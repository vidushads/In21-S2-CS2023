#include <iostream>
#include <vector>
#include <algorithm>
#include <iomanip>

using namespace std;

void insertionSort(vector<int>& num_list, int n); //declare the function

int main() {
    int n; // number of integers
    vector<int> num_list; // to store the input integers
    cin >> n;

    for(int i = 0; i < n; i++){
        int x;
        cin >> x;
        num_list.push_back(x); //add the item to the list
        insertionSort(num_list, i+1); //sort the list

        double median; // to store the median

        //to check if the list has an even number of elements
        if (i % 2 != 0){
            median = (double)(num_list[i/2] + num_list[i/2 + 1]) / 2;
        }
        else{
            median = num_list[i/2];
        }

        cout << "sorted Array: ";

        for (int j = 0; j <= i; j++) {
            cout << num_list[j] << " ";
        }

        cout << '\n';

        //print the new median
        cout << "Median: " << fixed << setprecision(1) << median << '\n';
    }

    return 0;
}

void insertionSort(vector<int>& num_list, int n) {
    int i, key, j;
    for (i = 1; i < n; i++) {
        key = num_list[i];
        j = i - 1;

        while (j >= 0 && num_list[j] > key) {
            num_list[j + 1] = num_list[j];
            j = j - 1;
        }
        num_list[j + 1] = key;
    }
}
